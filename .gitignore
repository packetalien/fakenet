# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version 
# control as they are data points which are potentially sensitive and subject 
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Ignore transient lock info files created by terraform apply
.terraform.tfstate.lock.info

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc
# macOS System files
.DS_Store
.AppleDouble
.AppleDB
.AppleDesktop
.Spotlight-V100
.Trashes
Icon\r
._*

# Local configuration files
*.swp
*.swo
*.sublime-workspace
.vscode/*

# Compiled output files
*.o
*.pyc
*.pyo
*.class
*.jar

# Logs and temporary files
*.log
*.tmp
*.temp

# Dependency and build artifacts
node_modules/
vendor/
dist/
build/
*.min.js
*.min.css

# Package manager files
package-lock.json
yarn.lock
pip-log.txt
*.egg-info/

# Environment and configuration files
.env
.env.local
.env.*.local

# IDE and editor configurations
.idea/
.project
.classpath
*.suo
*.user
*.userosscache
*.sln.dotSettings

